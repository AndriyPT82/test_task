{"version":3,"sources":["components/Input/Input.jsx","components/Form/Form.jsx","components/Card/Card.jsx","components/Cards/Cards.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["Input","inputName","inputValue","placeholder","handleChange","handleBlur","errorMessage","clearField","className","name","onClick","classNames","type","value","onChange","onBlur","Form","useState","number","setInputValue","errors","setErrors","history","useHistory","formValidator","errorsFields","isValid","length","match","isNaN","event","target","trim","getAttribute","state","onSubmit","preventDefault","Object","entries","input","console","log","push","Card","id","category","price","modal","to","toFixed","Cards","goods","useContext","AppContext","map","good","Fragment","Modal","setGood","useParams","useEffect","find","React","createContext","App","setGoods","fetch","then","response","json","result","obj","index","Provider","path","component","goodId","sort","a","b","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27564eb3.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport './Input.scss';\n\nexport const Input = ({\n  inputName,\n  inputValue,\n  placeholder,\n  handleChange,\n  handleBlur,\n  errorMessage,\n  clearField,\n\n}) => {\n\n  return (\n    <div\n      className=\"input-container\"\n      error-message={errorMessage}\n    >\n      {!!errorMessage && !!inputValue && <span\n        className=\"input-cleaner\"\n        name={inputName}\n        onClick={clearField}\n      >\n        ⤫\n      </span>}\n      <input\n        className={classNames(\n          'input',\n          { 'input--error': !!errorMessage }\n        )}\n        type=\"text\"\n        name={inputName}\n        value={inputValue}\n        placeholder={placeholder}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Form.scss';\nimport { Input } from '../Input';\n\nexport const Form = () => {\n  const [inputValue, setInputValue] = useState({\n    name: '',\n    number: '',\n  })\n  const [errors, setErrors] = useState({\n    name: '',\n    number: '',\n  })\n\n  const history = useHistory()\n\n  const formValidator = (name, value) => {\n    const errorsFields = {};\n    let isValid = true;\n\n    if (!value.length || (value.match(/\\d/) && name === 'name')) {\n      isValid = false;\n      errorsFields[name] = !value.length ? 'This field in required' : 'Only letters allowed';\n    } else if (name === 'number' && (isNaN(value) || value.length !== 12)) {\n      isValid = false;\n      const errorMessage = isNaN(+value)\n        ? 'Only numbers allowed'\n        : 'Should contain 12 characters';\n\n      errorsFields[name] = errorMessage;\n    };\n\n    !isValid && setErrors(errors => ({ ...errors, ...errorsFields }))\n\n    return isValid;\n  }\n\n  const handleBlur = (event) => {\n    const { name, value } = event.target;\n    formValidator(name, value.trim())\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let isValid = true;\n    for (const input of Object.entries(inputValue)) {\n      const [name, value] = input;\n      if (!formValidator(name, value)) {\n        isValid = false\n      }\n    }\n\n    if (isValid) {\n      console.log(inputValue)\n      history.push('/')\n    };\n  }\n\n  const clearField = (event) => {\n    const name = event.target.getAttribute('name');\n\n    setErrors(errors => ({ ...errors, [name]: '' }))\n    setInputValue(state => ({ ...state, [name]: '' }))\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (errors[name]) setErrors(state => ({ ...state, [name]: '' }))\n    setInputValue(state => ({ ...state, [name]: value }))\n  };\n\n  const { name, number } = inputValue;\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={handleSubmit}\n    >\n\n      <Input\n        inputName={'name'}\n        inputValue={name}\n        placeholder={'Name'}\n        errorMessage={errors.name}\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n        clearField={clearField}\n      />\n\n\n      <Input\n        inputName={'number'}\n        inputValue={number}\n        placeholder={'Number'}\n        errorMessage={errors.number}\n        handleChange={handleChange}\n        handleBlur={handleBlur}\n        clearField={clearField}\n      />\n\n      <button className=\"button button--order\">\n        Order\n      </button>\n    </form>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Form } from '../Form';\nimport './Card.scss';\n\nexport const Card = ({ id, name, category, price, modal = false }) => {\n\n  return (\n    <li\n      className={classNames(\n        'card',\n        { 'card--modal': !!modal })}\n    >\n      {\n        !!modal && <Link\n          to='/'\n          className=\"card__close\"\n        >\n          ⤬\n        </Link>\n      }\n      {\n        !id\n          ? <>\n            <h2>Not found</h2>\n            <Link\n              to='/'\n              className=\"button\"\n            >\n              CLOSE\n            </Link>\n          </>\n          : <>\n            <div className=\"card__category\">{category}</div>\n            <div className=\"card__name\">{name}</div>\n            <div\n              className={classNames(\n                'card__order',\n                { 'card__order--modal': !!modal })}\n            >\n              <span className=\"card__price\">{price.toFixed(2)}</span>\n              {\n                !!modal\n                  ? <Form />\n                  : <Link\n                    to={`goods/${id}`}\n                    className=\"button card__button\"\n                  >\n                    Buy\n                  </Link>\n              }\n            </div>\n          </>\n      }\n    </li >\n  )\n}\n","import React, { useContext } from 'react';\nimport { AppContext } from '../../App';\nimport { Card } from '../Card'\nimport './Cards.scss';\n\nexport const Cards = () => {\n\n  const {goods} = useContext(AppContext)\n\n  return (\n    <ul className=\"cards\">\n      {\n        goods.map(good => (\n          <React.Fragment key={good.id}>\n            <Card {...good} />\n          </React.Fragment>\n        ))\n      }\n    </ul>\n  )\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card } from '../Card';\nimport './Modal.scss';\n\nimport { AppContext } from '../../App';\n\nexport const Modal = () => {\n\n  const [good, setGood] = useState(null);\n  const { goods } = useContext(AppContext);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (!id) return;\n    const good = goods.find(good => good.id === +id);\n    setGood(good)\n  }, [id])\n\n  return (\n    <div\n      className=\"modal\"\n    >\n      <Card modal={true} {...good} />\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { Route, useHistory } from 'react-router-dom';\nimport './App.scss';\nimport { Cards } from './components/Cards';\nimport { Modal } from './components/Modal';\n\n\nexport const AppContext = React.createContext(null);\n\nfunction App() {\n  const [goods, setGoods] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch('https://run.mocky.io/v3/b7d36eea-0b3f-414a-ba44-711b5f5e528e')\n      .then(response => response.json())\n      .then((json) => {\n        const result = json.map((obj, index) => ({ ...obj, 'id': index + 1 }))\n        setGoods(result)\n      })\n  }, []);\n\n  const getCheapest = () => {\n    const goodId = goods.sort((a, b) => a.price - b.price)[0].id\n    history.push(`/goods/${goodId}`)\n  };\n\n\n  if (!goods.length) {\n    return <h1>Loading...</h1>\n  };\n\n  return (\n    <AppContext.Provider value={{ goods }}>\n      <div className=\"App\">\n        <Route path='/' component={Cards} />\n        <Route path={'/goods/:id'} component={Modal} />\n        <button\n          className=\"button button--cheapest\"\n          name='cheapest'\n          onClick={getCheapest}\n        >\n          Buy cheapest\n        </button>\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nrequire('typeface-roboto')\n\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}